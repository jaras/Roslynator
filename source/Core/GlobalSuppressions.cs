
// This file is used by Code Analysis to maintain SuppressMessage 
// attributes that are applied to this project.
// Project-level suppressions either have no target or are given 
// a specific target and scoped to a namespace, type, member, etc.

[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "RCS1196:Call extension method as instance method.", Justification = "<Pending>", Scope = "member", Target = "~M:Roslynator.SemanticModelExtensions.GetSpeculativeMethodSymbol(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.SyntaxNode)~Microsoft.CodeAnalysis.IMethodSymbol")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "RCS1196:Call extension method as instance method.", Justification = "<Pending>", Scope = "member", Target = "~M:Roslynator.SemanticModelExtensions.GetTypeSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.SyntaxNode,System.Threading.CancellationToken)~Microsoft.CodeAnalysis.ITypeSymbol")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "RCS1196:Call extension method as instance method.", Justification = "<Pending>", Scope = "member", Target = "~M:Roslynator.SemanticModelExtensions.GetSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.SyntaxNode,System.Threading.CancellationToken)~Microsoft.CodeAnalysis.ISymbol")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "RCS1196:Call extension method as instance method.", Justification = "<Pending>", Scope = "member", Target = "~M:Roslynator.CSharp.CSharpExtensions.GetSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax,System.Threading.CancellationToken)~Microsoft.CodeAnalysis.ISymbol")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "RCS1196:Call extension method as instance method.", Justification = "<Pending>", Scope = "member", Target = "~M:Roslynator.CSharp.CSharpExtensions.GetSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax,System.Threading.CancellationToken)~Microsoft.CodeAnalysis.ISymbol")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "RCS1196:Call extension method as instance method.", Justification = "<Pending>", Scope = "member", Target = "~M:Roslynator.CSharp.CSharpExtensions.GetSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax,System.Threading.CancellationToken)~Microsoft.CodeAnalysis.ISymbol")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "RCS1196:Call extension method as instance method.", Justification = "<Pending>", Scope = "member", Target = "~M:Roslynator.CSharp.CSharpExtensions.GetSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,System.Threading.CancellationToken)~Microsoft.CodeAnalysis.ISymbol")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "RCS1196:Call extension method as instance method.", Justification = "<Pending>", Scope = "member", Target = "~M:Roslynator.CSharp.CSharpExtensions.GetSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax,System.Threading.CancellationToken)~Microsoft.CodeAnalysis.ISymbol")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "RCS1196:Call extension method as instance method.", Justification = "<Pending>", Scope = "member", Target = "~M:Roslynator.CSharp.CSharpExtensions.GetSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.SelectOrGroupClauseSyntax,System.Threading.CancellationToken)~Microsoft.CodeAnalysis.ISymbol")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "RCS1196:Call extension method as instance method.", Justification = "<Pending>", Scope = "member", Target = "~M:Roslynator.CSharp.CSharpExtensions.GetTypeSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax,System.Threading.CancellationToken)~Microsoft.CodeAnalysis.ITypeSymbol")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "RCS1196:Call extension method as instance method.", Justification = "<Pending>", Scope = "member", Target = "~M:Roslynator.CSharp.CSharpExtensions.GetTypeSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax,System.Threading.CancellationToken)~Microsoft.CodeAnalysis.ITypeSymbol")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "RCS1196:Call extension method as instance method.", Justification = "<Pending>", Scope = "member", Target = "~M:Roslynator.CSharp.CSharpExtensions.GetTypeSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,System.Threading.CancellationToken)~Microsoft.CodeAnalysis.ITypeSymbol")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Style", "RCS1196:Call extension method as instance method.", Justification = "<Pending>", Scope = "member", Target = "~M:Roslynator.CSharp.CSharpExtensions.GetTypeSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.SelectOrGroupClauseSyntax,System.Threading.CancellationToken)~Microsoft.CodeAnalysis.ITypeSymbol")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "CA1714:Flags enums should have plural names", Justification = "<Pending>", Scope = "type", Target = "~T:Roslynator.CSharp.PreprocessorDirectiveKind")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "CA1714:Flags enums should have plural names", Justification = "<Pending>", Scope = "type", Target = "~T:Roslynator.CSharp.CommentKind")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "CA1714:Flags enums should have plural names", Justification = "<Pending>", Scope = "type", Target = "~T:Roslynator.CSharp.ModifierKind")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Performance", "CA1815:Override equals and operator equals on value types", Justification = "<Pending>", Scope = "type", Target = "~T:Roslynator.CSharp.Syntax.IfStatementInfo.Enumerator")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Usage", "CA2231:Overload operator equals on overriding value type Equals", Justification = "<Pending>", Scope = "type", Target = "~T:Roslynator.CSharp.Syntax.IfStatementInfo.Enumerator")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1034:Nested types should not be visible", Justification = "<Pending>", Scope = "type", Target = "~T:Roslynator.CSharp.Syntax.IfStatementInfo.Enumerator")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1063:Implement IDisposable Correctly", Justification = "<Pending>", Scope = "member", Target = "~M:Roslynator.Empty.Enumerator`1.Dispose")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Simplification", "RCS1020:Simplify Nullable<T> to T?.", Justification = "<Pending>", Scope = "type", Target = "~T:Roslynator.CSharp.NullCheckStyles")]

